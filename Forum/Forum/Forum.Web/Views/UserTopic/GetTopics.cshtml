@using Forum.Application.Infrastructure.Helpers;
@using System.Security.Claims;

@model PagedList<Forum.Application.Topics.ResponseModels.UserTopicDetailsModel>

@{
	ViewData["Title"] = "Topics";
}

<head>
	<link rel="stylesheet" href="~/css/custom-styles.css" />
</head>
<div class="container mt-4 mb-4 d-flex justify-content-center">
	<div class="table-responsive">
		<table class="table">
			<tbody>
				@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
				{
					<form class="d-flex flex-column gap-4" asp-action="Create" asp-controller="UserTopic" enctype="multipart/form-data">
						<input hidden name="Id" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
						<textarea name="Body" class="form-control w-100 bg-Light text-Black border-1 rounded-2" rows="4" placeholder="Write Topic..."></textarea>
						@if (ViewBag.Error != null)
						{
							<div class="p-2 bg-danger rounded-2">
								<p class="text-black m-0">@ViewBag.Error</p>
							</div>
						}

						<div>
							<input type="file" name="image" class="form-control" accept="image/*" />
						</div>

						<button type="submit" class="btn btn-primary btn-lg">Add Topic</button>
					</form>
				}
				@foreach (var topic in Model.Items)
				{
					<tr>
						<td>
							<div class="topic-container">
								<img src="@topic.UserImageUrl" alt="User Image" class="topic-image">
								<div class="topic-details">
									<a href="@Url.Action("GetUserByName", "User", new { userName = topic.UserName })" class="topic-username" style="color: black; font-weight: bold;">@topic.UserName</a>
									<div class="topic-title">@topic.Title</div>
									<div class="topic-created">Created at: @topic.CreatedAt</div>
									<div class="topic-comments">
										Comments:
										<a href="@Url.Action("GetTopicById", "UserTopic", new { id = topic.Id })" class="topic-comment-count" style="color: black; font-weight: bold;">@topic.CountOfComments</a>
									</div>
								</div>
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>
<div class="container mt-4 mb-4 d-flex justify-content-center">
	<div class="pagination">
		<div class="pagination-info">
			<span>Page @Model.CurrentPage of @Model.TotalPages</span>
		</div>

		<div class="pagination-links">
			@if (Model.HasPreviousPage)
			{
				<a href="@Url.Action("GetTopics", new { pageNumber = 1, pageSize = Model.PageSize })" class="page-link">First</a>
				<a href="@Url.Action("GetTopics", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })" class="page-link">Previous</a>
			}
			else
			{
				<span class="disabled">First</span>
				<span class="disabled">Previous</span>
			}

			@for (int i = 1; i <= Model.TotalPages; i++)
			{
				if (i == Model.CurrentPage)
				{
					<span class="current-page">@i</span>
				}
				else
				{
					<a href="@Url.Action("GetTopics", new { pageNumber = i, pageSize = Model.PageSize })" class="page-link">@i</a>
				}
			}

			@if (Model.HasNextPage)
			{
				<a href="@Url.Action("GetTopics", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })" class="page-link">Next</a>
				<a href="@Url.Action("GetTopics", new { pageNumber = Model.TotalPages, pageSize = Model.PageSize })" class="page-link">Last</a>
			}
			else
			{
				<span class="disabled">Next</span>
				<span class="disabled">Last</span>
			}
		</div>
	</div>
</div>

